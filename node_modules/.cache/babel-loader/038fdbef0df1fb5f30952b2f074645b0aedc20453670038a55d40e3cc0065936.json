{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manager\\\\Desktop\\\\demin-test-app\\\\src\\\\components\\\\Directions.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport styles from '../css/currencies_styles.module.scss';\nimport { useActions } from '../store/useActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Directions(_ref) {\n  _s();\n  let {\n    directionsData\n  } = _ref;\n  //   const [currencies, setCurrencies] = useState(\"\")\n  //   const { filterCurrencies } = useActions()\n\n  //   const filterCash = (cash) => {\n  //     return () => {      \n  //         setCurrencies(cash)\n  //         filterCurrencies({ directionFilter: cash })\n  //     }\n  // }\n\n  const {\n    filterCurrencies\n  } = useActions();\n  const currenciesRef = useRef([]);\n  const filterCash = cash => {\n    return () => {\n      if (cash === \"crypto\") currenciesRef.current = [\"BTC\", \"ETH\", \"USDTTRC\"];\n      if (cash === \"cash\") currenciesRef.current = [\"CASHUSD\", \"CASHRUB\"];\n      if (cash === \"banks\") currenciesRef.current = [\"ACRUB\", \"SBERRUB\", \"TCSBRUB\"];\n      filterCurrencies({\n        directionFilter: currenciesRef.current\n      });\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u041E\\u0442\\u0434\\u0430\\u0435\\u0442\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filterCurr,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: filterCash(\"\"),\n        children: \"\\u0412\\u0441\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: filterCash(\"crypto\"),\n        children: \"\\u041A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0432\\u0430\\u043B\\u044E\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: filterCash(\"cash\"),\n        children: \"\\u041D\\u0430\\u043B\\u0438\\u0447\\u043D\\u044B\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: filterCash(\"banks\"),\n        children: \"\\u0411\\u0430\\u043D\\u043A\\u0438 RUB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: filterCash(\"banks\"),\n        children: \"\\u0411\\u0430\\u043D\\u043A\\u0438 UAH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), directionsData.map((direction, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: direction.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n_s(Directions, \"Gc1sg12To8DbBy5O3W7dJSNfMfI=\", false, function () {\n  return [useActions];\n});\n_c = Directions;\nexport { Directions };\nvar _c;\n$RefreshReg$(_c, \"Directions\");","map":{"version":3,"names":["useEffect","useRef","useState","styles","useActions","jsxDEV","_jsxDEV","Fragment","_Fragment","Directions","_ref","_s","directionsData","filterCurrencies","currenciesRef","filterCash","cash","current","directionFilter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","filterCurr","onClick","map","direction","i","name","_c","$RefreshReg$"],"sources":["C:/Users/Manager/Desktop/demin-test-app/src/components/Directions.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\r\nimport styles from '../css/currencies_styles.module.scss'\r\nimport { useActions } from '../store/useActions'\r\n\r\nfunction Directions({ directionsData }) {\r\n//   const [currencies, setCurrencies] = useState(\"\")\r\n//   const { filterCurrencies } = useActions()\r\n  \r\n//   const filterCash = (cash) => {\r\n//     return () => {      \r\n//         setCurrencies(cash)\r\n//         filterCurrencies({ directionFilter: cash })\r\n//     }\r\n// }\r\n\r\nconst { filterCurrencies } = useActions()\r\nconst currenciesRef = useRef([])\r\n\r\nconst filterCash = (cash) => {\r\n  return () => {\r\n    if(cash === \"crypto\")\r\n      currenciesRef.current = [\"BTC\", \"ETH\", \"USDTTRC\"]\r\n    \r\n    if(cash === \"cash\") \r\n      currenciesRef.current = [\"CASHUSD\", \"CASHRUB\"]\r\n\r\n    if(cash === \"banks\") \r\n      currenciesRef.current = [\"ACRUB\", \"SBERRUB\", \"TCSBRUB\"]\r\n      \r\n    filterCurrencies({ directionFilter: currenciesRef.current })\r\n  }\r\n\r\n}\r\n\r\n  return (\r\n    <>\r\n       <h4>Отдаете</h4>\r\n        <div className={styles.filterCurr}>\r\n            <button onClick={filterCash(\"\")}>Все</button>\r\n            <button onClick={filterCash(\"crypto\")}>Криптовалюты</button>\r\n            <button onClick={filterCash(\"cash\")}>Наличные</button>\r\n            <button onClick={filterCash(\"banks\")}>Банки RUB</button>\r\n            <button onClick={filterCash(\"banks\")}>Банки UAH</button>\r\n        </div>\r\n        \r\n        {directionsData.map((direction, i) => (\r\n          <div key={i}>\r\n            <span>{direction.name}</span>\r\n          </div>\r\n        ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport { Directions }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}