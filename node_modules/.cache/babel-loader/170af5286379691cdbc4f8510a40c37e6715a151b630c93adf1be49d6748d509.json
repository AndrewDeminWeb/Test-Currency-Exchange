{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  directionsData: [],\n  filterData: []\n};\nconst currenciesStore = createSlice({\n  name: \"currencies\",\n  initialState,\n  reducers: {\n    getCurrencies: (state, action) => {\n      state.directionsData = action.payload.directions;\n      state.filterData = action.payload.filter;\n    },\n    filterCurrencies: (state, action) => {\n      if (action.payload.directionFilter) {\n        let directionCurrencies = [\"BTC\", \"ETH\", \"USDTTRC\"];\n        if (action.payload.directionFilter === \"crypto\") console.log(directionCurrencies);\n        state.directionsData = state.directionsData.filter(direction => directionCurrencies.every(d => direction.code.includes(d)));\n      }\n      if (action.payload.filterCurr) state.filterData = state.filterData.filter(direction => direction.name);\n    }\n  }\n});\nexport const {\n  reducer: currenciesReducer\n} = currenciesStore;\nexport const {\n  getCurrencies,\n  filterCurrencies\n} = currenciesStore.actions;","map":{"version":3,"names":["createSlice","initialState","directionsData","filterData","currenciesStore","name","reducers","getCurrencies","state","action","payload","directions","filter","filterCurrencies","directionFilter","directionCurrencies","console","log","direction","every","d","code","includes","filterCurr","reducer","currenciesReducer","actions"],"sources":["C:/Users/Manager/Desktop/demin-test-app/src/store/currenciesReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    directionsData: [],\r\n    filterData: []\r\n}\r\n\r\nconst currenciesStore = createSlice({\r\n    name: \"currencies\",\r\n    initialState,\r\n    reducers: {\r\n        getCurrencies: (state, action) => {\r\n            state.directionsData = action.payload.directions\r\n            state.filterData = action.payload.filter\r\n        },\r\n        filterCurrencies: (state, action) => {\r\n            if(action.payload.directionFilter) {\r\n                let directionCurrencies = [\"BTC\", \"ETH\", \"USDTTRC\"]\r\n                if(action.payload.directionFilter === \"crypto\")\r\n                    console.log(directionCurrencies)\r\n                state.directionsData = state.directionsData.filter(direction =>\r\n                    directionCurrencies.every(d => direction.code.includes(d)))\r\n            }\r\n\r\n            if(action.payload.filterCurr)\r\n                state.filterData = state.filterData.filter(direction => direction.name)\r\n        }\r\n    }\r\n})\r\n\r\nexport const { reducer: currenciesReducer } = currenciesStore\r\nexport const { getCurrencies, filterCurrencies } = currenciesStore.actions"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,cAAc,EAAE,EAAE;EAClBC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,eAAe,GAAGJ,WAAW,CAAC;EAChCK,IAAI,EAAE,YAAY;EAClBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACN,cAAc,GAAGO,MAAM,CAACC,OAAO,CAACC,UAAU;MAChDH,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACC,OAAO,CAACE,MAAM;IAC5C,CAAC;IACDC,gBAAgB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACjC,IAAGA,MAAM,CAACC,OAAO,CAACI,eAAe,EAAE;QAC/B,IAAIC,mBAAmB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC;QACnD,IAAGN,MAAM,CAACC,OAAO,CAACI,eAAe,KAAK,QAAQ,EAC1CE,OAAO,CAACC,GAAG,CAACF,mBAAmB,CAAC;QACpCP,KAAK,CAACN,cAAc,GAAGM,KAAK,CAACN,cAAc,CAACU,MAAM,CAACM,SAAS,IACxDH,mBAAmB,CAACI,KAAK,CAACC,CAAC,IAAIF,SAAS,CAACG,IAAI,CAACC,QAAQ,CAACF,CAAC,CAAC,CAAC,CAAC;MACnE;MAEA,IAAGX,MAAM,CAACC,OAAO,CAACa,UAAU,EACxBf,KAAK,CAACL,UAAU,GAAGK,KAAK,CAACL,UAAU,CAACS,MAAM,CAACM,SAAS,IAAIA,SAAS,CAACb,IAAI,CAAC;IAC/E;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEmB,OAAO,EAAEC;AAAkB,CAAC,GAAGrB,eAAe;AAC7D,OAAO,MAAM;EAAEG,aAAa;EAAEM;AAAiB,CAAC,GAAGT,eAAe,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}