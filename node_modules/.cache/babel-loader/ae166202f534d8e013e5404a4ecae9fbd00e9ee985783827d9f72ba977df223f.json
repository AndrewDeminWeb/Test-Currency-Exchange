{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  directionsData: [],\n  filterData: []\n};\nconst currenciesStore = createSlice({\n  name: \"currencies\",\n  initialState,\n  reducers: {\n    getCurrencies: (state, action) => {\n      state.directionsData.push(action.payload.directions);\n      state.filterData = action.payload.filter;\n    },\n    filterCurrencies: (state, action) => {\n      // if(action.payload.directionFilter) {\n      //     if(action.payload.directionFilter === \"crypto\") {\n      //         state.directionsData = state.directionsData.filter(direction =>\n      //             [\"BTC\", \"ETH\", \"USDTTRC\"].indexOf(direction.code) !== -1)\n      //     }\n\n      //     if(action.payload.directionFilter === \"cash\") {\n      //         state.directionsData = state.directionsData.filter(direction =>\n      //             [\"CASHUSD\", \"CASHRUB\"].indexOf(direction.code) !== -1)\n      //     }\n\n      //     if(action.payload.directionFilter === \"banks\") {\n      //         state.directionsData = state.directionsData.filter(direction =>\n      //             [\"ACRUB\", \"SBERRUB\", \"TCSBRUB\"].indexOf(direction.code) !== -1)\n      //     }               \n\n      // }\n\n      // if(action.payload.directionFilter) {\n      //     const { directionFilter } = action.payload\n      //     state.directionsData = [...directionFilter]\n      // }\n\n      if (action.payload.directionFilter) {\n        const {\n          directionFilter\n        } = action.payload;\n        console.log(\"directionFilter\", directionFilter);\n        const newArray = [...state.directionsData];\n        state.directionsData = newArray.filter(direction => directionFilter.indexOf(direction.code) !== -1);\n      }\n      if (action.payload.filterCurr) state.filterData = state.filterData.filter(direction => direction.name);\n    }\n  }\n});\nexport const {\n  reducer: currenciesReducer\n} = currenciesStore;\nexport const {\n  getCurrencies,\n  filterCurrencies\n} = currenciesStore.actions;","map":{"version":3,"names":["createSlice","initialState","directionsData","filterData","currenciesStore","name","reducers","getCurrencies","state","action","push","payload","directions","filter","filterCurrencies","directionFilter","console","log","newArray","direction","indexOf","code","filterCurr","reducer","currenciesReducer","actions"],"sources":["C:/Users/Manager/Desktop/demin-test-app/src/store/currenciesReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    directionsData: [],\r\n    filterData: []\r\n}\r\n\r\nconst currenciesStore = createSlice({\r\n    name: \"currencies\",\r\n    initialState,\r\n    reducers: {\r\n        getCurrencies: (state, action) => {\r\n            state.directionsData.push(action.payload.directions)\r\n            state.filterData = action.payload.filter\r\n        },\r\n        filterCurrencies: (state, action) => {\r\n            // if(action.payload.directionFilter) {\r\n            //     if(action.payload.directionFilter === \"crypto\") {\r\n            //         state.directionsData = state.directionsData.filter(direction =>\r\n            //             [\"BTC\", \"ETH\", \"USDTTRC\"].indexOf(direction.code) !== -1)\r\n            //     }\r\n                \r\n            //     if(action.payload.directionFilter === \"cash\") {\r\n            //         state.directionsData = state.directionsData.filter(direction =>\r\n            //             [\"CASHUSD\", \"CASHRUB\"].indexOf(direction.code) !== -1)\r\n            //     }\r\n                \r\n            //     if(action.payload.directionFilter === \"banks\") {\r\n            //         state.directionsData = state.directionsData.filter(direction =>\r\n            //             [\"ACRUB\", \"SBERRUB\", \"TCSBRUB\"].indexOf(direction.code) !== -1)\r\n            //     }               \r\n                \r\n                \r\n            // }\r\n\r\n            // if(action.payload.directionFilter) {\r\n            //     const { directionFilter } = action.payload\r\n            //     state.directionsData = [...directionFilter]\r\n            // }\r\n\r\n            if(action.payload.directionFilter) {\r\n                const { directionFilter } = action.payload\r\n                console.log(\"directionFilter\", directionFilter)\r\n                const newArray = [...state.directionsData]\r\n                state.directionsData = newArray.filter(direction =>\r\n                    directionFilter.indexOf(direction.code) !== -1)\r\n            }\r\n\r\n\r\n            if(action.payload.filterCurr)\r\n                state.filterData = state.filterData.filter(direction => direction.name)\r\n        }\r\n    }\r\n})\r\n\r\nexport const { reducer: currenciesReducer } = currenciesStore\r\nexport const { getCurrencies, filterCurrencies } = currenciesStore.actions"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,cAAc,EAAE,EAAE;EAClBC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,eAAe,GAAGJ,WAAW,CAAC;EAChCK,IAAI,EAAE,YAAY;EAClBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACN,cAAc,CAACQ,IAAI,CAACD,MAAM,CAACE,OAAO,CAACC,UAAU,CAAC;MACpDJ,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACE,OAAO,CAACE,MAAM;IAC5C,CAAC;IACDC,gBAAgB,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MACjC;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;;MAGA;;MAEA;MACA;MACA;MACA;;MAEA,IAAGA,MAAM,CAACE,OAAO,CAACI,eAAe,EAAE;QAC/B,MAAM;UAAEA;QAAgB,CAAC,GAAGN,MAAM,CAACE,OAAO;QAC1CK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,eAAe,CAAC;QAC/C,MAAMG,QAAQ,GAAG,CAAC,GAAGV,KAAK,CAACN,cAAc,CAAC;QAC1CM,KAAK,CAACN,cAAc,GAAGgB,QAAQ,CAACL,MAAM,CAACM,SAAS,IAC5CJ,eAAe,CAACK,OAAO,CAACD,SAAS,CAACE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;MACvD;MAGA,IAAGZ,MAAM,CAACE,OAAO,CAACW,UAAU,EACxBd,KAAK,CAACL,UAAU,GAAGK,KAAK,CAACL,UAAU,CAACU,MAAM,CAACM,SAAS,IAAIA,SAAS,CAACd,IAAI,CAAC;IAC/E;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEkB,OAAO,EAAEC;AAAkB,CAAC,GAAGpB,eAAe;AAC7D,OAAO,MAAM;EAAEG,aAAa;EAAEO;AAAiB,CAAC,GAAGV,eAAe,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}